#
# Build Equibit binaries and copy them here
#

#
# The first parameter is -bd, then the build date step is executed. This step slows down a build
# during development. However, prior to a commit that will result in a push, it should always
# be done in order to give the new build a unique build date. The generated date is the value 
# of the "builddate" member of a eb_getinfo call output. Note that the new version of
# ../src/edc/buildversion.h should be commited to github.
#

if test "$1" = "-bd"; then
echo ">>>>>>>>>>>>>>> UPDATING BUILD_DATE <<<<<<<<<<<<<<<";
echo "// This file is generated by ./bin/install" > ../src/edc/buildversion.h;
echo "// The generated date is the value of the \"builddate\" member of a eb_getinfo call output" >> ../src/edc/buildversion.h;
echo "" >> ../src/edc/buildversion.h;
echo "const char * BUILD_DATE=\"`date`\";" >> ../src/edc/buildversion.h;
else
echo ">>>>>>>>>>>>>>> BUILD_DATE UPDATE SKIPPED <<<<<<<<<<<<<<<";
fi

echo ">>>>>>>>>>>>>>> Build Equibit binaries <<<<<<<<<<<<<<<"

cd ../src;./build
cd -

echo ">>>>>>>>>>>>>>> Copy Equibit binaries <<<<<<<<<<<<<<<"

cp ../src/equibitd . 
cp ../src/bitcoin-cli . 


echo ">>>>>>>>>>>>>>> Build Thales interface shared library <<<<<<<<<<<<<<<"

cd ../src/Thales;make
cd -

echo ">>>>>>>>>>>>>>> Copy Thales interface shared library <<<<<<<<<<<<<<<"

mkdir -p Thales
cp ../src/Thales/libnfast.so Thales
