#
# Build Equibit binaries and copy them here
#

#
# If any parameter is specified, then the build date step is skipped. This step slows down a build
# during development. However, prior to a commit, that will result in a push, it should always
# be done in order to give the new build a unique build date. The generated date is the value 
# of the "builddate" member of a eb_getinfo call output.
#

if test "$#" -eq 0; then
echo ">>>>>>>>>>>>>>> UPDATING BUILD_DATE";
echo "// This file is generated by ./bin/install" > ../src/edc/buildversion.h;
echo "// The generated date is the value of the \"builddate\" member of a eb_getinfo call output" >> ../src/edc/buildversion.h;
echo "" >> ../src/edc/buildversion.h;
echo "const char * BUILD_DATE=\"`date`\";" >> ../src/edc/buildversion.h;
else
echo ">>>>>>>>>>>>>>> BUILD_DATE UPDATE SKIPPED!!!!";
fi

echo ">>>>>>>>>>>>>>> Build Equibit binaries"

cd ../src;./build
cd -

echo ">>>>>>>>>>>>>>> Copy Equibit binaries"

cp ../src/equibitd . 
cp ../src/bitcoin-cli . 


echo ">>>>>>>>>>>>>>> Build Thales interface shared library"

cd ../src/Thales;make
cd -

echo ">>>>>>>>>>>>>>> Copy Thales interface shared library"

mkdir -p Thales
cp ../src/Thales/libnfast.so Thales
